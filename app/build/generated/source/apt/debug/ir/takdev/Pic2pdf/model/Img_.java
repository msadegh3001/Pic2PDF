
package ir.takdev.Pic2pdf.model;

import ir.takdev.Pic2pdf.model.ImgCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;


// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "Img". Can be used for QueryBuilder and for referencing DB names.
 */
public final class Img_ implements EntityInfo<Img> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "Img";

    public static final int __ENTITY_ID = 2;

    public static final Class<Img> __ENTITY_CLASS = Img.class;

    public static final String __DB_NAME = "Img";

    public static final CursorFactory<Img> __CURSOR_FACTORY = new Factory();

    @Internal
    static final ImgIdGetter __ID_GETTER = new ImgIdGetter();

    public final static Img_ __INSTANCE = new Img_();

    public final static io.objectbox.Property<Img> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<Img> name =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, String.class, "name");

    public final static io.objectbox.Property<Img> date =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, java.util.Date.class, "date");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<Img>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        name,
        date
    };

    public final static io.objectbox.Property<Img> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<Img> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<Img>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<Img> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<Img> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<Img> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class ImgIdGetter implements IdGetter<Img> {
        @Override
        public long getId(Img object) {
            return object.getId();
        }
    }

}
